- name: Get IP address of First Control Plane
  set_fact:
    vip: "{{ groups['vip'][0] }}"

- name: Create kubeadm config file
  copy:
    dest: /home/devops/kubeadm-config.yaml
    content: |
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          cgroup-driver: cgroupfs
      ---
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: ClusterConfiguration
      kubernetesVersion: v1.30.14
      controlPlaneEndpoint: "{{ vip }}"
      networking:
        podSubnet: 10.0.0.0/16
      apiServer:
        certSANs:
        - "{{ vip }}"

- name: Run kubeadm init
  shell: kubeadm init --config=/home/devops/kubeadm-config.yaml --upload-certs
  register: kubeadm_output
  become: true
  

- name: Copy kube config
  shell: |
    mkdir -p $HOME/.kube
    sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: Install Helm
  shell: |
    curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    sudo apt-get install apt-transport-https --yes
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    sudo apt-get update
    sudo apt-get install helm -y
  become: true

- name: Add Cilium Helm repository
  command: helm repo add cilium https://helm.cilium.io/
  become: true

- name: Update Helm repositories
  command: helm repo update
  become: true

- name: Install Cilium with Helm
  command: >
    helm install cilium cilium/cilium \
    --namespace kube-system \
    --set kubeProxyReplacement=true \
    --set k8sServiceHost={{ vip }} \
    --set k8sServicePort=6443 \
    --set l2announcements.enabled=true \
    --set devices="{eth0}" \
    --set externalIPs.enabled=true \
    --set gatewayAPI.enabled=true \
    --set prometheus.enabled=true \
    --set operator.prometheus.enabled=true \
    --set ipam.mode=cluster-pool \
    --set ipam.operator.clusterPoolIPv4PodCIDRList=10.0.0.0/16 \
    --set socketLB.hostNamespaceOnly=true \
    --set cni.exclusive=false
    --wait
  become: true

- name: Extract kubeadm token and cert-key
  set_fact:
    join_token: "{{ kubeadm_output.stdout | regex_search('(?<=--token\\s)[a-zA-Z0-9.]*') }}"
    cert_key: "{{ kubeadm_output.stdout | regex_search('(?<=--certificate-key\\s)[a-f0-9]*') }}"
    ca_cert_hash: "{{ kubeadm_output.stdout | regex_search('sha256:[a-f0-9]*') }}"
  become: true

- name: Save token and cert to file on local machine
  copy:
    content: |
      join_token: {{ join_token }}
      cert_key: {{ cert_key }}
      ca_cert_hash: {{ ca_cert_hash }}
    dest: "{{ playbook_dir }}/tmp/kubeadm_tokens.txt"
  delegate_to: localhost
  become: true
